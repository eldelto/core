( TODO:
    - [ ] Implement 0branch & branch add/subtract the current stack value from
	their return stack, so the 'ret' instruction basically performs a jump
    - [ ] Split out preamble tests
    - [ ] Test return stack words
    - [ ] [compile] compiles immediate words
    - [ ] Implement 'if' & 'then'
    - [ ] Extend the interpreter to support recursion
)

( -- addr )
( Returns the codeword pointer of the following word. )
: ' word drop find codeword ; 

( int -- )
( Takes the number from stack and appends it as 'const int' to the
  dictionary. )
: literal immediate 'const' b, , ;

( int -- )
( TODO: Implement in assembly )
( Jumps the specified amount of bytes forwards or backwards. )
: 0branch rpop + rput ;

: double dup + ;
